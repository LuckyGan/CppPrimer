class base{
public:
	string name(){ return basename;}
	virtual void print(ostream &os){ os<<basename;}
private:
	string basename;
};
class derived:public base{
public:
	void print(ostream &os){ print(os); os<<" "<<i;}
private:
	int i;
};
base bobj;		base *bp1=&bobj;	base &br1=bobj;
derived dobj;	base *bp2=&dobj;	base &br2=dobj;
a) bobj.print()//调用base::print
b) dobj.print()//调用derived::print
c) bp1->name() //调用base::name
d) bp2->name() //调用derived::name
e) br1.print() //调用base::print
f) br2.print() //调用derived::print
